name: nix 

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_matrix:
    name: "build"
    runs-on: ubuntu-latest
    timeout-minutes: 360
    strategy:
      matrix:
        include:
          - arch: x86_64-linux
            target: generic-x86_64-debug
          - arch: x86_64-linux
            target: lenovo-x1-carbon-gen11-debug
          - arch: x86_64-linux
            target: nvidia-jetson-orin-agx-debug-nodemoapps-from-x86_64
          - arch: x86_64-linux
            target: nvidia-jetson-orin-nx-debug-nodemoapps-from-x86_64
          - arch: riscv64-linux
            target: microchip-icicle-kit-debug
    steps:
      - name: Maximize space available on rootfs
        # Why not use https://github.com/easimon/maximize-build-space directly?
        # The reason is: we want to maximize the space on rootfs, since that's
        # where the nix store (`/nix/store`) is located. Github action
        # https://github.com/easimon/maximize-build-space maximizes
        # the builder space on ${GITHUB_WORKSPACE}, which is not what we need.
        # Alternatively, we could move the nix store to ${GITHUB_WORKSPACE}
        # and use https://github.com/easimon/maximize-build-space as such, but
        # we suspect other tooling (e.g. cachix) would not work well with such
        # configuration.
        run: |
          echo "Available storage before cleanup:"
          df -h
          echo
          echo "Removing unwanted software... "
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          echo "... done"
          echo
          echo "Available storage after cleanup:"
          df -h
      - name: Checkout Ghaf
        uses: actions/checkout@v3
      - name: Install nix
        uses: cachix/install-nix-action@v22
        with:
          extra-nix-config: |
            trusted-public-keys = ghaf-dev.cachix.org-1:IxMRy9D4TCXA/57XvtU0xrcEC0ErsnLvxJfPQe8O9pc= cache.vedenemo.dev:RGHheQnb6rXGK5v9gexJZ8iWTPX6OcSeS56YeXYzOcg= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://ghaf-dev.cachix.org?priority=20 https://cache.vedenemo.dev https://cache.nixos.org
            system-features = nixos-test benchmark big-parallel kvm
      - name: Print nix.conf
        run: |
          echo "/etc/nix/nix.conf:"
          cat /etc/nix/nix.conf
      - name: Setup cachix
        uses: cachix/cachix-action@v12
        with:
          name: ghaf-dev
          authToken: ${{ secrets.CACHIX_AUTH_GHAF_DEV }}
          pushFilter: '(/\.links/|nixos\.img$|store-disk\.squashfs$)'
          cachixArgs: '-j8 -c16'
      - name: Build ${{ matrix.arch }}.${{ matrix.target }}
        run: |
          cachix watch-exec ghaf-dev -- \
            time nix build .#packages.${{ matrix.arch }}.${{ matrix.target }}